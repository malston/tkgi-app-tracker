---
# TKGI Application Tracker Pipeline - Single Foundation
# This pipeline template is used for individual foundations following team-based deployment

resource_types:
- name: time
  type: docker-image
  source:
    repository: concourse/time-resource

resources:
- name: s3-container-image
  type: s3
  icon: cloud-download-outline
  source:
    access_key_id: ((concourse_s3_access_key_id))
    secret_access_key: ((concourse_s3_secret_access_key))
    bucket: ((concourse-s3-bucket))
    endpoint: ((concourse-s3-endpoint))
    regexp: ((cflinux_current_image))/((cflinux_current_image))-(.*).tgz

- name: tkgi-app-tracker-repo
  type: git
  source:
    uri: ((git_uri))
    branch: ((git_release_tag))
    private_key: ((git-private-key))

- name: config-repo
  type: git
  source:
    uri: ((config_git_uri))
    branch: ((config_git_branch))
    private_key: ((git-private-key))

- name: weekly-timer
  type: time
  source:
    start: 6:00 AM
    stop: 7:00 AM
    days: [Monday]
    location: America/New_York

- name: manual-trigger
  type: time
  source:
    interval: 70000h # Large interval to prevent automatic triggering

- name: app-tracker-reports
  type: s3
  source:
    bucket: ((s3_bucket))
    regexp: reports/((foundation))/weekly-report-(.*).tar.gz
    access_key_id: ((s3_access_key_id))
    secret_access_key: ((s3_secret_access_key))
    region_name: ((s3_region))

jobs:
- name: collect-and-report
  plan:
  - in_parallel:
    - get: s3-container-image
      params:
        unpack: true
    - get: tkgi-app-tracker-repo
    - get: config-repo
    - get: weekly-timer
      trigger: true
  
  - task: collect-foundation-data
    file: tkgi-app-tracker-repo/ci/tasks/collect-data/task.yml
    image: s3-container-image
    params:
      FOUNDATION: ((foundation))
      DATACENTER: ((datacenter))
      ENVIRONMENT: ((environment))
      OM_TARGET: ((om_target))
      OM_CLIENT_ID: ((om_client_id))
      OM_CLIENT_SECRET: ((om_client_secret))
      TKGI_API_ENDPOINT: ((tkgi_api_endpoint))
    on_failure:
      task: notify-failure
      file: tkgi-app-tracker-repo/ci/tasks/notify/task.yml
      image: s3-container-image
      params:
        MESSAGE: "Failed to collect TKGI cluster data from foundation ((foundation))"
        WEBHOOK_URL: ((teams_webhook_url))
  
  - task: aggregate-data
    file: tkgi-app-tracker-repo/ci/tasks/aggregate-data/task.yml
    image: s3-container-image
    on_failure:
      task: notify-failure
      file: tkgi-app-tracker-repo/ci/tasks/notify/task.yml
      image: s3-container-image
      params:
        MESSAGE: "Failed to aggregate TKGI application data for foundation ((foundation))"
        WEBHOOK_URL: ((teams_webhook_url))
  
  - task: generate-reports
    file: tkgi-app-tracker-repo/ci/tasks/generate-reports/task.yml
    image: s3-container-image
    on_failure:
      task: notify-failure
      file: tkgi-app-tracker-repo/ci/tasks/notify/task.yml
      image: s3-container-image
      params:
        MESSAGE: "Failed to generate TKGI application reports for foundation ((foundation))"
        WEBHOOK_URL: ((teams_webhook_url))
  
  - task: package-reports
    file: tkgi-app-tracker-repo/ci/tasks/package-reports/task.yml
    image: s3-container-image
    params:
      ENVIRONMENT: ((foundation))
  
  - put: app-tracker-reports
    params:
      file: packaged-reports/weekly-report-*.tar.gz
  
  - task: notify-success
    file: tkgi-app-tracker-repo/ci/tasks/notify/task.yml
    image: s3-container-image
    params:
      MESSAGE: "TKGI Application Tracker reports generated successfully for foundation ((foundation)). Reports available in S3."
      WEBHOOK_URL: ((teams_webhook_url))
  
  - put: manual-trigger


- name: test-pipeline
  plan:
  - in_parallel:
    - get: s3-container-image
      params:
        unpack: true
    - get: tkgi-app-tracker-repo
      trigger: true
    - get: config-repo
  
  - task: run-unit-tests
    file: tkgi-app-tracker-repo/ci/tasks/run-tests/task.yml
    image: s3-container-image
  
  - task: validate-scripts
    file: tkgi-app-tracker-repo/ci/tasks/validate-scripts/task.yml
    image: s3-container-image